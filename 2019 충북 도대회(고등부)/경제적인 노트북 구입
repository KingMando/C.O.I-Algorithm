#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct ST {
	int cpu;
	int ram;
	int disk;
	int price;
	int purchase; // 0이면 구매O, 1이면 구매X
	int num; // 노트북의 번호
};

bool cmp(ST a, ST b)
{
	if (a.price < b.price) // 가격 기준으로 오름차순 정렬
		return true;
	return false;
}

int main()
{
	int num;
	cin >> num;
	vector<ST> List_Notebook(num); // 구조체 벡터 선언


	for (int i = 0; i < num; i++) // 구조체 벡터에 입력 받기
	{
		cin >> List_Notebook[i].cpu >> List_Notebook[i].ram >> List_Notebook[i].disk >> List_Notebook[i].price;
		List_Notebook[i].num = i + 1;
	}

	for (int i = 0; i < num; i++) // 조건1: 성능이 낮아 구매하지 않을 노트북 선정
	{
		for (int j = 0; j < num; j++)
		{
			if(i!=j) 
			{       // 3가지 성능이 모두 낮다면 구매하지 않도록 함.
				if (List_Notebook[i].cpu < List_Notebook[j].cpu && List_Notebook[i].ram < List_Notebook[j].ram && List_Notebook[i].disk < List_Notebook[j].disk)
				{
					List_Notebook[i].purchase = 1; // purchase가 1이면 구매하지 않음.
				}
			}
		}
	}

	sort(List_Notebook.begin(), List_Notebook.end(), cmp); // 조건2: 가격순으로 오름차순 정렬
	
	cout << "\n";
	for (int i = 0; i < num; i++)
	{
		if(List_Notebook[i].purchase==0) // 구매 후보에 오른 노트북인 경우
		{
			cout << List_Notebook[i].num;
			break;
		}			
	}


	return 0;
}
